{"version":3,"sources":["redux/types.js","redux/actions.js","components/PostForm.js","components/Post.js","components/Posts.js","components/Loader/index.js","components/FetchedPosts.js","components/Alert/index.js","App.js","reportWebVitals.js","redux/postsReducer.js","redux/appReducer.js","redux/rootReducer.js","redux/middleware.js","redux/sagas.js","index.js"],"names":["CREATE_POST","FETCH_POSTS","REQUEST_POSTS","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","hideLoader","type","showAlert","message","dispatch","payload","setTimeout","hideAlert","PostForm","props","submitHandler","event","preventDefault","title","state","trim","newPost","id","Date","now","toString","createPost","setState","changeInputHandler","prev","target","name","value","onSubmit","this","className","htmlFor","onChange","React","Component","mapDispatchToProps","post","connect","console","log","syncPosts","posts","length","map","Post","Index","role","useDispatch","useSelector","fetchedPosts","app","loading","onClick","Alert","App","isWarningShow","warningMessage","FetchedPosts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","forbidden","sagaWatcher","sagaWorker","takeEvery","put","call","fetchPosts","Error","a","Promise","resolve","fetch","response","status","json","saga","createSagaMiddleware","store","createStore","compose","applyMiddleware","thunk","next","foundForbidden","filter","word","includes","join","window","__REDUX_DEVTOOLS_EXTENSION__","run","StrictMode","render","document","getElementById"],"mappings":"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","file":"static/js/main.9558cb6e.chunk.js","sourcesContent":["export const CREATE_POST = 'POST/CREATE_POST'\nexport const FETCH_POSTS = 'POST/FETCH_POSTS'\nexport const REQUEST_POSTS = 'POST/REQUEST_POSTS'\nexport const SHOW_LOADER = 'APP/SHOW_LOADER'\nexport const HIDE_LOADER = 'APP/HIDE_LOADER'\nexport const SHOW_ALERT = 'APP/SHOW_ALERT'\nexport const HIDE_ALERT = 'APP/HIDE_ALERT'\n","import { CREATE_POST, HIDE_LOADER, HIDE_ALERT, SHOW_LOADER, SHOW_ALERT, REQUEST_POSTS } from './types'\n\nexport function createPost(post) {\n  return {\n    type: CREATE_POST,\n    payload: post,\n  }\n}\n\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER,\n  }\n}\n\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER,\n  }\n}\n\nexport function showAlert(message) {\n  return dispatch => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: {\n        message,\n      },\n    })\n    setTimeout(() => {\n      dispatch(hideAlert())\n    }, 3000)\n  }\n}\n\nexport function hideAlert() {\n  return {\n    type: HIDE_ALERT,\n  }\n}\n\nexport function fetchPosts() {\n  return {\n    type: REQUEST_POSTS,\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createPost, showAlert } from '../redux/actions'\n\nclass PostForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: '',\n    }\n  }\n\n  submitHandler = event => {\n    event.preventDefault()\n    const { title } = this.state\n    if (!title.trim()) {\n      this.props.showAlert('Напишите заголовок поста')\n      return\n    }\n    const newPost = {\n      title,\n      id: Date.now().toString(),\n    }\n    this.props.createPost(newPost)\n    this.setState({ ...this.state, title: '' })\n  }\n\n  changeInputHandler = event => {\n    this.setState(prev => ({\n      ...prev,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.submitHandler}>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Заголовок поста</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            value={this.state.title}\n            name=\"title\"\n            onChange={this.changeInputHandler}\n          />\n        </div>\n        <button className=\"btn btn-success\" type=\"submit\">\n          Создать\n        </button>\n      </form>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  createPost,\n  showAlert,\n}\n\nexport default connect(null, mapDispatchToProps)(PostForm)\n","import React from 'react'\n// eslint-disable-next-line\nexport default ({ post }) => {\n  return (\n    <div className=\"card mt-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{post.title}</h5>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Post from './Post'\n\nconst Posts = ({ syncPosts }) => {\n  if (!syncPosts.length) {\n    return <p className=\"text-center\">Постов пока нет</p>\n  }\n  return syncPosts.map(post => {\n    return <Post post={post} key={post.id} />\n  })\n}\n\nconst mapStateToProps = state => {\n  console.log('mapStateToProps state', state)\n  return {\n    syncPosts: state.posts.posts,\n  }\n}\n\nexport default connect(mapStateToProps, null)(Posts)\n","import React from 'react'\nimport './index.css'\nexport default function Index() {\n  return (\n    <div className=\"loaderWrapper\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Post from './Post'\nimport Loader from './Loader'\nimport { fetchPosts } from '../redux/actions'\n// eslint-disable-next-line\nexport default () => {\n  const dispatch = useDispatch()\n  const posts = useSelector(state => state.posts.fetchedPosts)\n  const isAppLoading = useSelector(state => state.app.loading)\n\n  if (isAppLoading) {\n    return <Loader />\n  }\n  if (!posts.length) {\n    return (\n      <button className=\"btn btn-primary\" onClick={() => dispatch(fetchPosts())}>\n        Загрузить\n      </button>\n    )\n  }\n  return posts.map(post => {\n    return <Post post={post} key={post.id} />\n  })\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { hideAlert } from '../../redux/actions'\nexport const Alert = ({ message }) => {\n  const dispatch = useDispatch()\n  return (\n    <div className=\"alert alert-warning\" role=\"alert\" onClick={() => dispatch(hideAlert())}>\n      {message}\n    </div>\n  )\n}\n","import React from 'react'\nimport PostForm from './components/PostForm'\nimport Posts from './components/Posts'\nimport FetchedPosts from './components/FetchedPosts'\nimport { useSelector } from 'react-redux'\nimport { Alert } from './components/Alert'\n\nfunction App() {\n  const isWarningShow = useSelector(state => state.app.isWarningShow)\n  const warningMessage = useSelector(state => state.app.warningMessage)\n  return (\n    <div className=\"container pt-3\">\n      {isWarningShow && <Alert message={warningMessage} />}\n      <div className=\"row\">\n        <div className=\"col\">\n          <PostForm />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Синхронные посты</h2>\n          <Posts />\n        </div>\n        <div className=\"col\">\n          <h2>Асинхронные посты</h2>\n          <FetchedPosts />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CREATE_POST, FETCH_POSTS } from './types'\n\nconst initialState = {\n  posts: [],\n  fetchedPosts: [],\n}\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_POST:\n      // return {...state, posts: state.posts.concat(action.payload)}\n      return { ...state, posts: [...state.posts, action.payload] }\n    case FETCH_POSTS:\n      return { ...state, fetchedPosts: action.payload }\n    default:\n      return state\n  }\n}\n","import { HIDE_LOADER, HIDE_ALERT, SHOW_LOADER, SHOW_ALERT } from './types'\n\nconst initialState = {\n  loading: false,\n  isWarningShow: false,\n  warningMessage: '',\n}\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_LOADER:\n      return { ...state, loading: true }\n    case HIDE_LOADER:\n      return { ...state, loading: false }\n    case SHOW_ALERT:\n      return { ...state, isWarningShow: true, warningMessage: action.payload.message }\n    case HIDE_ALERT:\n      return { ...state, isWarningShow: false }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { postsReducer } from './postsReducer'\nimport { appReducer } from './appReducer'\n\nexport const rootReducer = combineReducers({\n  posts: postsReducer,\n  app: appReducer,\n})\n","import { CREATE_POST } from './types'\nimport { showAlert } from './actions'\n\nconst forbidden = ['fuck', 'ass', 'bitch']\n\nexport function forbiddenWordsMiddleware({ dispatch }) {\n  return function (next) {\n    return function (action) {\n      if (action.type === CREATE_POST) {\n        const foundForbidden = forbidden.filter(word => action.payload.title.includes(word))\n        if (foundForbidden.length) {\n          return dispatch(showAlert(`Слова \"${foundForbidden.join('\", \"')}\" запрещены`))\n        }\n      }\n      return next(action)\n    }\n  }\n}\n","import { takeEvery, put, call } from 'redux-saga/effects'\nimport { FETCH_POSTS, REQUEST_POSTS } from './types'\nimport { hideLoader, showAlert, showLoader } from './actions'\nexport function* sagaWatcher() {\n  yield takeEvery(REQUEST_POSTS, sagaWorker)\n}\nfunction* sagaWorker() {\n  try {\n    yield put(showLoader())\n    const payload = yield call(fetchPosts)\n    if (!payload) {\n      throw new Error('Что-по пошло не так')\n    }\n    yield put({\n      type: FETCH_POSTS,\n      payload,\n    })\n    yield put(hideLoader())\n  } catch (error) {\n    yield put(showAlert(error.message))\n    yield put(hideLoader())\n  }\n}\nasync function fetchPosts() {\n  try {\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5')\n    if (response.status !== 200) {\n      return\n    }\n    return await response.json()\n  } catch (error) {}\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootReducer } from './redux/rootReducer'\nimport { forbiddenWordsMiddleware } from './redux/middleware'\nimport { sagaWatcher } from './redux/sagas'\n\nconst saga = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk, forbiddenWordsMiddleware, saga),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  ),\n)\n\nsaga.run(sagaWatcher)\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n)\nrender(app, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}